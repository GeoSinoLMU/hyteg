Parameters
{
    equation stokes;

    // meshes
    // dim == 2:
    //  square:        square
    // dim == 3:
    //  symmetricCube:  symmetric cube with 24 tets
    //  cube:           cube with 6 tets
    //  sphericalShell: spherical shell
    //  tDomain:        T-shaped domain
    //  snake:          snake-shaped domain
    meshType snake;

    // parameters for square
    meshLayout CRISSCROSS;

    // parameters for symmetric cube and cube
    numEdgesPerSide 1;

    // parameters for spherical shell
    shellNTan 3;
    shellNRad 2;
    shellRMin 0.5;
    shellRMax 1.0;

    // parameters for T-domain
    //
    // top down view
    //
    //       out
    //       #
    // in    #     diam   = 1
    // #######     height = 6 // height minus junction
    //       #     width  = 2 // one sided distance from junction
    //       #
    //       out
    //
    //     out
    //     ##
    //     ##
    // in  ##     diam   = 2
    // ######     height = 4 // height minus junction
    // ######     width  = 3 // one sided distance from junction
    //     ##
    //     ##
    //     ##
    //     out
    //
    // height == width == 0 gives only junction with specified diameter (cube w/ diam^3 cubes)
    //
    tDomainDiameter     1; // number of cubes in "diameter", > 0 please
    tDomainHeight       600;
    tDomainWidth        2;
    tDomainNumJunctions 1;

    snakeNumRows 24;
    snakeRowLength 24;

    discretization P2;

    numCycles 0;
    cycleType V;
    fmgInnerCycles 0; // 0 == no fmg

    // CRISSCROSS: ~0.4
    // CRISS:    : P1: ? , P2: ~0.72
    sorRelax 0.3;
    sorRelaxEstimationIterations 0;
    sorRelaxEstimationLevel 3;
    velocitySorRelax 1.0;

    symmGSVelocity false;
    numGSVelocity 2;
    symmGSPressure false;
    numGSPressure 1;

    preSmoothingSteps 3;
    postSmoothingSteps 3;
    smoothingIncrement 2;
    minLevel 0;
    maxLevel 1; // P1 level, P2 level is automatically reduced by 1
    skipCyclesForAvgConvRate 0;
    L2residualTolerance 1e-16;
    projectPressureAfterRestriction false;
    calculateDiscretizationError false;
    coarseGridMaxIterations 20000;
    coarseGridResidualTolerance 1e-05;

    // 0: MUMPS                          (PETSc)
    // 1: block preconditioned MINRES    (PETSc)
    // 2: MINRES                         (HyTeG)
    // 3: pressure preconditioned MINRES (HyTeG)
    // 4: SuperLU (dist)                 (PETSc)
    coarseGridSolverType 1;

    // for solver type 1:
    // 0: PCGAMG
    // 1: PCJACOBI
    // 2: Schur complement
    // 3: HYPRE
    coarseGridSolverVelocityPreconditionerType 1;

    // BLR options for MUMPS
    blockLowRank true;
    blockLowRankTolerance 1e-5;

    agglomeration false;
    agglomerationStrategy bulk;   // dedicated, bulk, or interval
    agglomerationNumProcesses 3;
    agglomerationInterval 3;

    cyclesBeforeDC 0;
    postDCPreSmoothingSteps 3;
    postDCPostSmoothingSteps 3;
    postDCSmoothingIncrement 2;

    outputBaseDirectory .;
    outputVTK true;
    outputTiming false;
    outputTimingJSON true;
    outputTimingJSONFile timing.json;
    outputAgglomerationTimingJSONFile timing_agglomeration.json;
    outputSQL true;
    outputParallelSQL false;
    outputSQLFile database.db;

}
