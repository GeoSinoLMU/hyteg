#!/usr/bin/env python3

import numpy as np
import scipy.special
from sympy import *
from enum import Enum
import sys

x = symbols('x')

DEGREE = 7

monomials = []

for d in range(DEGREE+1):
  monomials.append(x**d)

num_coefficients = len(monomials)

# Generate code
x.name = 'x'

def generate(name):
  print('class {} {{'.format(name))
  print('public:')

  print('  static real_t eval(uint_t basis, real_t x) {')

  print('    switch(basis) {')

  for i in range(num_coefficients):
    print('        case {}:'.format(i))

    poly = monomials[i]

    print('        return {};'.format(ccode(poly)))

  print('      default:')
  print('        WALBERLA_ABORT("Polynomial basis " << basis << " was not generated");')

  print('    }')
  print('  }')

  print('};\n')


print('#pragma once\n')
print('// This file was generated by the monomial_basis_1d.py Python script')
print('// Do not edit it by hand\n')
print('namespace hhg {\n')

generate('MonomialBasis1D')

print('}')
